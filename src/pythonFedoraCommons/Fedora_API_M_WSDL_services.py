"""
################################################## 
# Fedora_API_M_WSDL_services.py 
# generated by ZSI.generate.wsdl2python
##################################################

    Edited by Benjamin O'Steen

    This file is part of python-fedoracommons.

    python-fedoracommons is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    python-fedoracommons is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with python-fedoracommons.  If not, see <http://www.gnu.org/licenses/>.
"""

__license__ = 'GPL http://www.gnu.org/licenses/gpl.txt'
__author__ = "Benjamin O'Steen <bosteen@gmail.com>"
__version__ = '0.1'

from Fedora_API_M_WSDL_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class Fedora_API_M_ServiceLocator:
    Fedora_API_M_address = "http://localhost:8080/fedora/services/management"
    def getFedora_API_MAddress(self):
        return Fedora_API_M_ServiceLocator.Fedora_API_M_address
    def getFedora_API_M(self, url=None, **kw):
        return Fedora_API_M_Binding_SOAPHTTPSOAP(url or Fedora_API_M_ServiceLocator.Fedora_API_M_address, **kw)

# Methods
class Fedora_API_M_Binding_SOAPHTTPSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: ingest
    def ingest(self, request):
        if isinstance(request, ingestRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#ingest", **kw)
        # no output wsaction
        response = self.binding.Receive(ingestResponse.typecode)
        return response

    # op: ingestObject
    def ingestObject(self, request):
        if isinstance(request, ingestObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#ingestObject", **kw)
        # no output wsaction
        response = self.binding.Receive(ingestObjectResponse.typecode)
        return response

    # op: describeUser
    def describeUser(self, request):
        if isinstance(request, describeUserRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#describeUser", **kw)
        # no output wsaction
        response = self.binding.Receive(describeUserResponse.typecode)
        return response

    # op: modifyObject
    def modifyObject(self, request):
        if isinstance(request, modifyObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyObject", **kw)
        # no output wsaction
        response = self.binding.Receive(modifyObjectResponse.typecode)
        return response

    # op: getObjectXML
    def getObjectXML(self, request):
        if isinstance(request, getObjectXMLRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getObjectXML", **kw)
        # no output wsaction
        response = self.binding.Receive(getObjectXMLResponse.typecode)
        return response

    # op: export
    def export(self, request):
        if isinstance(request, exportRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#export", **kw)
        # no output wsaction
        response = self.binding.Receive(exportResponse.typecode)
        return response

    # op: exportObject
    def exportObject(self, request):
        if isinstance(request, exportObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#exportObject", **kw)
        # no output wsaction
        response = self.binding.Receive(exportObjectResponse.typecode)
        return response

    # op: purgeObject
    def purgeObject(self, request):
        if isinstance(request, purgeObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#purgeObject", **kw)
        # no output wsaction
        response = self.binding.Receive(purgeObjectResponse.typecode)
        return response

    # op: addDatastream
    def addDatastream(self, request):
        if isinstance(request, addDatastreamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#addDatastream", **kw)
        # no output wsaction
        response = self.binding.Receive(addDatastreamResponse.typecode)
        return response

    # op: addDisseminator
    def addDisseminator(self, request):
        if isinstance(request, addDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#addDisseminator", **kw)
        # no output wsaction
        response = self.binding.Receive(addDisseminatorResponse.typecode)
        return response

    # op: modifyDatastreamByReference
    def modifyDatastreamByReference(self, request):
        if isinstance(request, modifyDatastreamByReferenceRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyDatastreamByReference", **kw)
        # no output wsaction
        response = self.binding.Receive(modifyDatastreamByReferenceResponse.typecode)
        return response

    # op: modifyDatastreamByValue
    def modifyDatastreamByValue(self, request):
        if isinstance(request, modifyDatastreamByValueRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyDatastreamByValue", **kw)
        # no output wsaction
        response = self.binding.Receive(modifyDatastreamByValueResponse.typecode)
        return response

    # op: modifyDisseminator
    def modifyDisseminator(self, request):
        if isinstance(request, modifyDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyDisseminator", **kw)
        # no output wsaction
        response = self.binding.Receive(modifyDisseminatorResponse.typecode)
        return response

    # op: setDatastreamState
    def setDatastreamState(self, request):
        if isinstance(request, setDatastreamStateRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#setDatastreamState", **kw)
        # no output wsaction
        response = self.binding.Receive(setDatastreamStateResponse.typecode)
        return response

    # op: setDatastreamVersionable
    def setDatastreamVersionable(self, request):
        if isinstance(request, setDatastreamVersionableRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#setDatastreamVersionable", **kw)
        # no output wsaction
        response = self.binding.Receive(setDatastreamVersionableResponse.typecode)
        return response

    # op: compareDatastreamChecksum
    def compareDatastreamChecksum(self, request):
        if isinstance(request, compareDatastreamChecksumRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#compareDatastreamChecksum", **kw)
        # no output wsaction
        response = self.binding.Receive(compareDatastreamChecksumResponse.typecode)
        return response

    # op: setDisseminatorState
    def setDisseminatorState(self, request):
        if isinstance(request, setDisseminatorStateRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#setDisseminatorState", **kw)
        # no output wsaction
        response = self.binding.Receive(setDisseminatorStateResponse.typecode)
        return response

    # op: getDatastream
    def getDatastream(self, request):
        if isinstance(request, getDatastreamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDatastream", **kw)
        # no output wsaction
        response = self.binding.Receive(getDatastreamResponse.typecode)
        return response

    # op: getDatastreams
    def getDatastreams(self, request):
        if isinstance(request, getDatastreamsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDatastreams", **kw)
        # no output wsaction
        response = self.binding.Receive(getDatastreamsResponse.typecode)
        return response

    # op: getDatastreamHistory
    def getDatastreamHistory(self, request):
        if isinstance(request, getDatastreamHistoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDatastreamHistory", **kw)
        # no output wsaction
        response = self.binding.Receive(getDatastreamHistoryResponse.typecode)
        return response

    # op: getDisseminator
    def getDisseminator(self, request):
        if isinstance(request, getDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDisseminator", **kw)
        # no output wsaction
        response = self.binding.Receive(getDisseminatorResponse.typecode)
        return response

    # op: getDisseminators
    def getDisseminators(self, request):
        if isinstance(request, getDisseminatorsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDisseminators", **kw)
        # no output wsaction
        response = self.binding.Receive(getDisseminatorsResponse.typecode)
        return response

    # op: getDisseminatorHistory
    def getDisseminatorHistory(self, request):
        if isinstance(request, getDisseminatorHistoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDisseminatorHistory", **kw)
        # no output wsaction
        response = self.binding.Receive(getDisseminatorHistoryResponse.typecode)
        return response

    # op: purgeDatastream
    def purgeDatastream(self, request):
        if isinstance(request, purgeDatastreamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#purgeDatastream", **kw)
        # no output wsaction
        response = self.binding.Receive(purgeDatastreamResponse.typecode)
        return response

    # op: purgeDisseminator
    def purgeDisseminator(self, request):
        if isinstance(request, purgeDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#purgeDisseminator", **kw)
        # no output wsaction
        response = self.binding.Receive(purgeDisseminatorResponse.typecode)
        return response

    # op: getNextPID
    def getNextPID(self, request):
        if isinstance(request, getNextPIDRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getNextPID", **kw)
        # no output wsaction
        response = self.binding.Receive(getNextPIDResponse.typecode)
        return response

ingestRequest = ns0.ingest_Dec().pyclass

ingestResponse = ns0.ingestResponse_Dec().pyclass

ingestObjectRequest = ns0.ingestObject_Dec().pyclass

ingestObjectResponse = ns0.ingestObjectResponse_Dec().pyclass

describeUserRequest = ns0.describeUser_Dec().pyclass

describeUserResponse = ns0.describeUserResponse_Dec().pyclass

modifyObjectRequest = ns0.modifyObject_Dec().pyclass

modifyObjectResponse = ns0.modifyObjectResponse_Dec().pyclass

getObjectXMLRequest = ns0.getObjectXML_Dec().pyclass

getObjectXMLResponse = ns0.getObjectXMLResponse_Dec().pyclass

exportRequest = ns0.export_Dec().pyclass

exportResponse = ns0.exportResponse_Dec().pyclass

exportObjectRequest = ns0.exportObject_Dec().pyclass

exportObjectResponse = ns0.exportObjectResponse_Dec().pyclass

purgeObjectRequest = ns0.purgeObject_Dec().pyclass

purgeObjectResponse = ns0.purgeObjectResponse_Dec().pyclass

addDatastreamRequest = ns0.addDatastream_Dec().pyclass

addDatastreamResponse = ns0.addDatastreamResponse_Dec().pyclass

addDisseminatorRequest = ns0.addDisseminator_Dec().pyclass

addDisseminatorResponse = ns0.addDisseminatorResponse_Dec().pyclass

modifyDatastreamByReferenceRequest = ns0.modifyDatastreamByReference_Dec().pyclass

modifyDatastreamByReferenceResponse = ns0.modifyDatastreamByReferenceResponse_Dec().pyclass

modifyDatastreamByValueRequest = ns0.modifyDatastreamByValue_Dec().pyclass

modifyDatastreamByValueResponse = ns0.modifyDatastreamByValueResponse_Dec().pyclass

modifyDisseminatorRequest = ns0.modifyDisseminator_Dec().pyclass

modifyDisseminatorResponse = ns0.modifyDisseminatorResponse_Dec().pyclass

setDatastreamStateRequest = ns0.setDatastreamState_Dec().pyclass

setDatastreamStateResponse = ns0.setDatastreamStateResponse_Dec().pyclass

setDatastreamVersionableRequest = ns0.setDatastreamVersionable_Dec().pyclass

setDatastreamVersionableResponse = ns0.setDatastreamVersionableResponse_Dec().pyclass

compareDatastreamChecksumRequest = ns0.compareDatastreamChecksum_Dec().pyclass

compareDatastreamChecksumResponse = ns0.compareDatastreamChecksumResponse_Dec().pyclass

setDisseminatorStateRequest = ns0.setDisseminatorState_Dec().pyclass

setDisseminatorStateResponse = ns0.setDisseminatorStateResponse_Dec().pyclass

getDatastreamRequest = ns0.getDatastream_Dec().pyclass

getDatastreamResponse = ns0.getDatastreamResponse_Dec().pyclass

getDatastreamsRequest = ns0.getDatastreams_Dec().pyclass

getDatastreamsResponse = ns0.getDatastreamsResponse_Dec().pyclass

getDatastreamHistoryRequest = ns0.getDatastreamHistory_Dec().pyclass

getDatastreamHistoryResponse = ns0.getDatastreamHistoryResponse_Dec().pyclass

getDisseminatorRequest = ns0.getDisseminator_Dec().pyclass

getDisseminatorResponse = ns0.getDisseminatorResponse_Dec().pyclass

getDisseminatorsRequest = ns0.getDisseminators_Dec().pyclass

getDisseminatorsResponse = ns0.getDisseminatorsResponse_Dec().pyclass

getDisseminatorHistoryRequest = ns0.getDisseminatorHistory_Dec().pyclass

getDisseminatorHistoryResponse = ns0.getDisseminatorHistoryResponse_Dec().pyclass

purgeDatastreamRequest = ns0.purgeDatastream_Dec().pyclass

purgeDatastreamResponse = ns0.purgeDatastreamResponse_Dec().pyclass

purgeDisseminatorRequest = ns0.purgeDisseminator_Dec().pyclass

purgeDisseminatorResponse = ns0.purgeDisseminatorResponse_Dec().pyclass

getNextPIDRequest = ns0.getNextPID_Dec().pyclass

getNextPIDResponse = ns0.getNextPIDResponse_Dec().pyclass
