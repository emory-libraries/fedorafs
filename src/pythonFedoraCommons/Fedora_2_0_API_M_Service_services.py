"""
################################################## 
# Fedora_API_M_Service_services.py 
# generated by ZSI.generate.wsdl2python
##################################################

    Edited by Benjamin O'Steen

    This file is part of python-fedoracommons.

    python-fedoracommons is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    python-fedoracommons is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with python-fedoracommons.  If not, see <http://www.gnu.org/licenses/>.
"""

__license__ = 'GPL http://www.gnu.org/licenses/gpl.txt'
__author__ = "Benjamin O'Steen <bosteen@gmail.com>"
__version__ = '0.1'

import Fedora_2_0_API_M_Service_services_types
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class Fedora_API_M_ServiceLocator:
    Fedora_API_M_address = "http://ora.ouls.ox.ac.uk:8080/fedora/management/soap"
    def getFedora_API_MAddress(self):
        return Fedora_API_M_ServiceLocator.Fedora_API_M_address
    def getFedora_API_M(self, url=None, **kw):
        return management_soapSoapBindingSOAP(url or Fedora_API_M_ServiceLocator.Fedora_API_M_address, **kw)

# Methods
class management_soapSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: ingest
    def ingest(self, request):
        if isinstance(request, ingestRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#ingest", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=ingestResponse.typecode.ofwhat, pyclass=ingestResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: ingestObject
    def ingestObject(self, request):
        if isinstance(request, ingestObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#ingestObject", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=ingestObjectResponse.typecode.ofwhat, pyclass=ingestObjectResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: describeUser
    def describeUser(self, request):
        if isinstance(request, describeUserRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#describeUser", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=describeUserResponse.typecode.ofwhat, pyclass=describeUserResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: modifyObject
    def modifyObject(self, request):
        if isinstance(request, modifyObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyObject", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=modifyObjectResponse.typecode.ofwhat, pyclass=modifyObjectResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getObjectXML
    def getObjectXML(self, request):
        if isinstance(request, getObjectXMLRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getObjectXML", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getObjectXMLResponse.typecode.ofwhat, pyclass=getObjectXMLResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: export
    def export(self, request):
        if isinstance(request, exportRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#export", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=exportResponse.typecode.ofwhat, pyclass=exportResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: exportObject
    def exportObject(self, request):
        if isinstance(request, exportObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#exportObject", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=exportObjectResponse.typecode.ofwhat, pyclass=exportObjectResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: purgeObject
    def purgeObject(self, request):
        if isinstance(request, purgeObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#purgeObject", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=purgeObjectResponse.typecode.ofwhat, pyclass=purgeObjectResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addDatastream
    def addDatastream(self, request):
        if isinstance(request, addDatastreamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#addDatastream", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addDatastreamResponse.typecode.ofwhat, pyclass=addDatastreamResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: addDisseminator
    def addDisseminator(self, request):
        if isinstance(request, addDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#addDisseminator", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=addDisseminatorResponse.typecode.ofwhat, pyclass=addDisseminatorResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: modifyDatastreamByReference
    def modifyDatastreamByReference(self, request):
        if isinstance(request, modifyDatastreamByReferenceRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyDatastreamByReference", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=modifyDatastreamByReferenceResponse.typecode.ofwhat, pyclass=modifyDatastreamByReferenceResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: modifyDatastreamByValue
    def modifyDatastreamByValue(self, request):
        if isinstance(request, modifyDatastreamByValueRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyDatastreamByValue", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=modifyDatastreamByValueResponse.typecode.ofwhat, pyclass=modifyDatastreamByValueResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: modifyDisseminator
    def modifyDisseminator(self, request):
        if isinstance(request, modifyDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#modifyDisseminator", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=modifyDisseminatorResponse.typecode.ofwhat, pyclass=modifyDisseminatorResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setDatastreamState
    def setDatastreamState(self, request):
        if isinstance(request, setDatastreamStateRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#setDatastreamState", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setDatastreamStateResponse.typecode.ofwhat, pyclass=setDatastreamStateResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: setDisseminatorState
    def setDisseminatorState(self, request):
        if isinstance(request, setDisseminatorStateRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#setDisseminatorState", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=setDisseminatorStateResponse.typecode.ofwhat, pyclass=setDisseminatorStateResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDatastream
    def getDatastream(self, request):
        if isinstance(request, getDatastreamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDatastream", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDatastreamResponse.typecode.ofwhat, pyclass=getDatastreamResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDatastreams
    def getDatastreams(self, request):
        if isinstance(request, getDatastreamsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDatastreams", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDatastreamsResponse.typecode.ofwhat, pyclass=getDatastreamsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDatastreamHistory
    def getDatastreamHistory(self, request):
        if isinstance(request, getDatastreamHistoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDatastreamHistory", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDatastreamHistoryResponse.typecode.ofwhat, pyclass=getDatastreamHistoryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDisseminator
    def getDisseminator(self, request):
        if isinstance(request, getDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDisseminator", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDisseminatorResponse.typecode.ofwhat, pyclass=getDisseminatorResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDisseminators
    def getDisseminators(self, request):
        if isinstance(request, getDisseminatorsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDisseminators", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDisseminatorsResponse.typecode.ofwhat, pyclass=getDisseminatorsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDisseminatorHistory
    def getDisseminatorHistory(self, request):
        if isinstance(request, getDisseminatorHistoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDisseminatorHistory", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDisseminatorHistoryResponse.typecode.ofwhat, pyclass=getDisseminatorHistoryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: purgeDatastream
    def purgeDatastream(self, request):
        if isinstance(request, purgeDatastreamRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#purgeDatastream", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=purgeDatastreamResponse.typecode.ofwhat, pyclass=purgeDatastreamResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: purgeDisseminator
    def purgeDisseminator(self, request):
        if isinstance(request, purgeDisseminatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#purgeDisseminator", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=purgeDisseminatorResponse.typecode.ofwhat, pyclass=purgeDisseminatorResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getNextPID
    def getNextPID(self, request):
        if isinstance(request, getNextPIDRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getNextPID", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getNextPIDResponse.typecode.ofwhat, pyclass=getNextPIDResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

class ingestRequest:
    def __init__(self):
        self._XML = None
        self._format = None
        self._logMessage = None
        return
ingestRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","ingest"), ofwhat=[ZSI.TC.Base64String(pname="XML", aname="_XML", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="format", aname="_format", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=ingestRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class ingestResponse:
    def __init__(self):
        self._response = None
        return
ingestResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","ingestResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=ingestResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class ingestObjectRequest:
    def __init__(self):
        self._METSXML = None
        self._logMessage = None
        return
ingestObjectRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","ingestObject"), ofwhat=[ZSI.TC.Base64String(pname="METSXML", aname="_METSXML", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=ingestObjectRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class ingestObjectResponse:
    def __init__(self):
        self._response = None
        return
ingestObjectResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","ingestObjectResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=ingestObjectResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class describeUserRequest:
    def __init__(self):
        self._id = None
        return
describeUserRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","describeUser"), ofwhat=[ZSI.TC.String(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=describeUserRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class describeUserResponse:
    def __init__(self):
        self._response = None
        return
describeUserResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","describeUserResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.UserInfo_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=describeUserResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyObjectRequest:
    def __init__(self):
        self._pid = None
        self._state = None
        self._label = None
        self._logMessage = None
        return
modifyObjectRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyObject"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="state", aname="_state", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="label", aname="_label", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyObjectRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyObjectResponse:
    def __init__(self):
        self._response = None
        return
modifyObjectResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyObjectResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyObjectResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getObjectXMLRequest:
    def __init__(self):
        self._pid = None
        return
getObjectXMLRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getObjectXML"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getObjectXMLRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getObjectXMLResponse:
    def __init__(self):
        self._response = None
        return
getObjectXMLResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getObjectXMLResponse"), ofwhat=[ZSI.TC.Base64String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getObjectXMLResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class exportRequest:
    def __init__(self):
        self._pid = None
        self._format = None
        self._context = None
        return
exportRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","export"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="format", aname="_format", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="context", aname="_context", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=exportRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class exportResponse:
    def __init__(self):
        self._response = None
        return
exportResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","exportResponse"), ofwhat=[ZSI.TC.Base64String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=exportResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class exportObjectRequest:
    def __init__(self):
        self._pid = None
        return
exportObjectRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","exportObject"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=exportObjectRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class exportObjectResponse:
    def __init__(self):
        self._response = None
        return
exportObjectResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","exportObjectResponse"), ofwhat=[ZSI.TC.Base64String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=exportObjectResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class purgeObjectRequest:
    def __init__(self):
        self._pid = None
        self._logMessage = None
        self._force = None
        return
purgeObjectRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","purgeObject"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="force", aname="_force", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=purgeObjectRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class purgeObjectResponse:
    def __init__(self):
        self._response = None
        return
purgeObjectResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","purgeObjectResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=purgeObjectResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class addDatastreamRequest:
    def __init__(self):
        self._pid = None
        self._dsID = None
        self._altIDs = None
        self._dsLabel = None
        self._versionable = None
        self._MIMEType = None
        self._formatURI = None
        self._dsLocation = None
        self._controlGroup = None
        self._dsState = None
        self._logMessage = None
        return
addDatastreamRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","addDatastream"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsID", aname="_dsID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfString_Def(pname="altIDs", aname="_altIDs", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsLabel", aname="_dsLabel", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="versionable", aname="_versionable", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="MIMEType", aname="_MIMEType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="formatURI", aname="_formatURI", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsLocation", aname="_dsLocation", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="controlGroup", aname="_controlGroup", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsState", aname="_dsState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addDatastreamRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class addDatastreamResponse:
    def __init__(self):
        self._response = None
        return
addDatastreamResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","addDatastreamResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addDatastreamResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class addDisseminatorRequest:
    def __init__(self):
        self._pid = None
        self._bDefPid = None
        self._bMechPid = None
        self._dissLabel = None
        self._bindingMap = None
        self._dissState = None
        self._logMessage = None
        return
addDisseminatorRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","addDisseminator"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="bDefPid", aname="_bDefPid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="bMechPid", aname="_bMechPid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissLabel", aname="_dissLabel", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.DatastreamBindingMap_Def(pname="bindingMap", aname="_bindingMap", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissState", aname="_dissState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addDisseminatorRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class addDisseminatorResponse:
    def __init__(self):
        self._response = None
        return
addDisseminatorResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","addDisseminatorResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=addDisseminatorResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyDatastreamByReferenceRequest:
    def __init__(self):
        self._pid = None
        self._dsID = None
        self._altIDs = None
        self._dsLabel = None
        self._versionable = None
        self._MIMEType = None
        self._formatURI = None
        self._dsLocation = None
        self._dsState = None
        self._logMessage = None
        self._force = None
        return
modifyDatastreamByReferenceRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyDatastreamByReference"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsID", aname="_dsID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfString_Def(pname="altIDs", aname="_altIDs", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsLabel", aname="_dsLabel", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="versionable", aname="_versionable", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="MIMEType", aname="_MIMEType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="formatURI", aname="_formatURI", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsLocation", aname="_dsLocation", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsState", aname="_dsState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="force", aname="_force", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyDatastreamByReferenceRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyDatastreamByReferenceResponse:
    def __init__(self):
        self._response = None
        return
modifyDatastreamByReferenceResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyDatastreamByReferenceResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyDatastreamByReferenceResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyDatastreamByValueRequest:
    def __init__(self):
        self._pid = None
        self._dsID = None
        self._altIDs = None
        self._dsLabel = None
        self._versionable = None
        self._MIMEType = None
        self._formatURI = None
        self._dsContent = None
        self._dsState = None
        self._logMessage = None
        self._force = None
        return
modifyDatastreamByValueRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyDatastreamByValue"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsID", aname="_dsID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfString_Def(pname="altIDs", aname="_altIDs", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsLabel", aname="_dsLabel", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="versionable", aname="_versionable", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="MIMEType", aname="_MIMEType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="formatURI", aname="_formatURI", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Base64String(pname="dsContent", aname="_dsContent", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsState", aname="_dsState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="force", aname="_force", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyDatastreamByValueRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyDatastreamByValueResponse:
    def __init__(self):
        self._response = None
        return
modifyDatastreamByValueResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyDatastreamByValueResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyDatastreamByValueResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyDisseminatorRequest:
    def __init__(self):
        self._pid = None
        self._dissID = None
        self._bMechPid = None
        self._dissLabel = None
        self._bindingMap = None
        self._dissState = None
        self._logMessage = None
        self._force = None
        return
modifyDisseminatorRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyDisseminator"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissID", aname="_dissID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="bMechPid", aname="_bMechPid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissLabel", aname="_dissLabel", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.DatastreamBindingMap_Def(pname="bindingMap", aname="_bindingMap", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissState", aname="_dissState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="force", aname="_force", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyDisseminatorRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class modifyDisseminatorResponse:
    def __init__(self):
        self._response = None
        return
modifyDisseminatorResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","modifyDisseminatorResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=modifyDisseminatorResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class setDatastreamStateRequest:
    def __init__(self):
        self._pid = None
        self._dsID = None
        self._dsState = None
        self._logMessage = None
        return
setDatastreamStateRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","setDatastreamState"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsID", aname="_dsID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsState", aname="_dsState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setDatastreamStateRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class setDatastreamStateResponse:
    def __init__(self):
        self._response = None
        return
setDatastreamStateResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","setDatastreamStateResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setDatastreamStateResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class setDisseminatorStateRequest:
    def __init__(self):
        self._pid = None
        self._dissID = None
        self._dissState = None
        self._logMessage = None
        return
setDisseminatorStateRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","setDisseminatorState"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissID", aname="_dissID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissState", aname="_dissState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setDisseminatorStateRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class setDisseminatorStateResponse:
    def __init__(self):
        self._response = None
        return
setDisseminatorStateResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","setDisseminatorStateResponse"), ofwhat=[ZSI.TC.String(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=setDisseminatorStateResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDatastreamRequest:
    def __init__(self):
        self._pid = None
        self._dsID = None
        self._asOfDateTime = None
        return
getDatastreamRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDatastream"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsID", aname="_dsID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="asOfDateTime", aname="_asOfDateTime", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDatastreamRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDatastreamResponse:
    def __init__(self):
        self._response = None
        return
getDatastreamResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDatastreamResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.Datastream_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDatastreamResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDatastreamsRequest:
    def __init__(self):
        self._pid = None
        self._asOfDateTime = None
        self._dsState = None
        return
getDatastreamsRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDatastreams"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="asOfDateTime", aname="_asOfDateTime", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsState", aname="_dsState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDatastreamsRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDatastreamsResponse:
    def __init__(self):
        self._response = None
        return
getDatastreamsResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDatastreamsResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfDatastream_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDatastreamsResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDatastreamHistoryRequest:
    def __init__(self):
        self._pid = None
        self._dsID = None
        return
getDatastreamHistoryRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDatastreamHistory"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsID", aname="_dsID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDatastreamHistoryRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDatastreamHistoryResponse:
    def __init__(self):
        self._response = None
        return
getDatastreamHistoryResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDatastreamHistoryResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfDatastream_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDatastreamHistoryResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDisseminatorRequest:
    def __init__(self):
        self._pid = None
        self._dissID = None
        self._asOfDateTime = None
        return
getDisseminatorRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDisseminator"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissID", aname="_dissID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="asOfDateTime", aname="_asOfDateTime", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisseminatorRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDisseminatorResponse:
    def __init__(self):
        self._response = None
        return
getDisseminatorResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDisseminatorResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.Disseminator_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisseminatorResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDisseminatorsRequest:
    def __init__(self):
        self._pid = None
        self._asOfDateTime = None
        self._dissState = None
        return
getDisseminatorsRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDisseminators"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="asOfDateTime", aname="_asOfDateTime", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissState", aname="_dissState", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisseminatorsRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDisseminatorsResponse:
    def __init__(self):
        self._response = None
        return
getDisseminatorsResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDisseminatorsResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfDisseminator_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisseminatorsResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDisseminatorHistoryRequest:
    def __init__(self):
        self._pid = None
        self._dissID = None
        return
getDisseminatorHistoryRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDisseminatorHistory"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissID", aname="_dissID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisseminatorHistoryRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getDisseminatorHistoryResponse:
    def __init__(self):
        self._response = None
        return
getDisseminatorHistoryResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getDisseminatorHistoryResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfDisseminator_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisseminatorHistoryResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class purgeDatastreamRequest:
    def __init__(self):
        self._pid = None
        self._dsID = None
        self._endDT = None
        self._logMessage = None
        self._force = None
        return
purgeDatastreamRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","purgeDatastream"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dsID", aname="_dsID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="endDT", aname="_endDT", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="force", aname="_force", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=purgeDatastreamRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class purgeDatastreamResponse:
    def __init__(self):
        self._response = None
        return
purgeDatastreamResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","purgeDatastreamResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfDateTimeString_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=purgeDatastreamResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class purgeDisseminatorRequest:
    def __init__(self):
        self._pid = None
        self._dissID = None
        self._endDT = None
        self._logMessage = None
        return
purgeDisseminatorRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","purgeDisseminator"), ofwhat=[ZSI.TC.String(pname="pid", aname="_pid", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="dissID", aname="_dissID", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="endDT", aname="_endDT", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="logMessage", aname="_logMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=purgeDisseminatorRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class purgeDisseminatorResponse:
    def __init__(self):
        self._response = None
        return
purgeDisseminatorResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","purgeDisseminatorResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfDateTimeString_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=purgeDisseminatorResponse, encoded="http://www.fedora.info/definitions/1/0/api/")

class getNextPIDRequest:
    def __init__(self):
        self._numPids = None
        self._pidNamespace = None
        return
getNextPIDRequest.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getNextPID"), ofwhat=[ZSI.TCnumbers.InonNegativeInteger(pname="numPids", aname="_numPids", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="pidNamespace", aname="_pidNamespace", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getNextPIDRequest, encoded="http://www.fedora.info/definitions/1/0/api/")

class getNextPIDResponse:
    def __init__(self):
        self._response = None
        return
getNextPIDResponse.typecode = Struct(pname=("http://www.fedora.info/definitions/1/0/api/","getNextPIDResponse"), ofwhat=[Fedora_2_0_API_M_Service_services_types.FedoraAPI_2_0_ns.ArrayOfString_Def(pname="response", aname="_response", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getNextPIDResponse, encoded="http://www.fedora.info/definitions/1/0/api/")
