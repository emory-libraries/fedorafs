"""
################################################## 
# Fedora_API_A_WSDL_services.py 
# generated by ZSI.generate.wsdl2python
##################################################

    Edited by Benjamin O'Steen

    This file is part of python-fedoracommons.

    python-fedoracommons is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    python-fedoracommons is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with python-fedoracommons.  If not, see <http://www.gnu.org/licenses/>.
"""

__license__ = 'GPL http://www.gnu.org/licenses/gpl.txt'
__author__ = "Benjamin O'Steen <bosteen@gmail.com>"
__version__ = '0.1'

from Fedora_API_A_WSDL_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class Fedora_API_A_ServiceLocator:
    Fedora_API_A_address = "http://localhost:8080/fedora/services/access"
    def getFedora_API_AAddress(self):
        return Fedora_API_A_ServiceLocator.Fedora_API_A_address
    def getFedora_API_A(self, url=None, **kw):
        return Fedora_API_A_Binding_SOAPHTTPSOAP(url or Fedora_API_A_ServiceLocator.Fedora_API_A_address, **kw)

# Methods
class Fedora_API_A_Binding_SOAPHTTPSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: describeRepository
    def describeRepository(self, request):
        if isinstance(request, describeRepositoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#describeRepository", **kw)
        # no output wsaction
        response = self.binding.Receive(describeRepositoryResponse.typecode)
        return response

    # op: getObjectProfile
    def getObjectProfile(self, request):
        if isinstance(request, getObjectProfileRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getObjectProfile", **kw)
        # no output wsaction
        response = self.binding.Receive(getObjectProfileResponse.typecode)
        return response

    # op: listMethods
    def listMethods(self, request):
        if isinstance(request, listMethodsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#listMethods", **kw)
        # no output wsaction
        response = self.binding.Receive(listMethodsResponse.typecode)
        return response

    # op: listDatastreams
    def listDatastreams(self, request):
        if isinstance(request, listDatastreamsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#listDatastreams", **kw)
        # no output wsaction
        response = self.binding.Receive(listDatastreamsResponse.typecode)
        return response

    # op: getDatastreamDissemination
    def getDatastreamDissemination(self, request):
        if isinstance(request, getDatastreamDisseminationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDatastreamDissemination", **kw)
        # no output wsaction
        response = self.binding.Receive(getDatastreamDisseminationResponse.typecode)
        return response

    # op: getDissemination
    def getDissemination(self, request):
        if isinstance(request, getDisseminationRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getDissemination", **kw)
        # no output wsaction
        response = self.binding.Receive(getDisseminationResponse.typecode)
        return response

    # op: findObjects
    def findObjects(self, request):
        if isinstance(request, findObjectsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#findObjects", **kw)
        # no output wsaction
        response = self.binding.Receive(findObjectsResponse.typecode)
        return response

    # op: resumeFindObjects
    def resumeFindObjects(self, request):
        if isinstance(request, resumeFindObjectsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#resumeFindObjects", **kw)
        # no output wsaction
        response = self.binding.Receive(findObjectsResponse.typecode)
        return response

    # op: getObjectHistory
    def getObjectHistory(self, request):
        if isinstance(request, getObjectHistoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.fedora.info/definitions/1/0/api/#getObjectHistory", **kw)
        # no output wsaction
        response = self.binding.Receive(getObjectHistoryResponse.typecode)
        return response

describeRepositoryRequest = ns0.describeRepository_Dec().pyclass

describeRepositoryResponse = ns0.describeRepositoryResponse_Dec().pyclass

getObjectProfileRequest = ns0.getObjectProfile_Dec().pyclass

getObjectProfileResponse = ns0.getObjectProfileResponse_Dec().pyclass

listMethodsRequest = ns0.listMethods_Dec().pyclass

listMethodsResponse = ns0.listMethodsResponse_Dec().pyclass

listDatastreamsRequest = ns0.listDatastreams_Dec().pyclass

listDatastreamsResponse = ns0.listDatastreamsResponse_Dec().pyclass

getDatastreamDisseminationRequest = ns0.getDatastreamDissemination_Dec().pyclass

getDatastreamDisseminationResponse = ns0.getDatastreamDisseminationResponse_Dec().pyclass

getDisseminationRequest = ns0.getDissemination_Dec().pyclass

getDisseminationResponse = ns0.getDisseminationResponse_Dec().pyclass

findObjectsRequest = ns0.findObjects_Dec().pyclass

findObjectsResponse = ns0.findObjectsResponse_Dec().pyclass

resumeFindObjectsRequest = ns0.resumeFindObjects_Dec().pyclass

findObjectsResponse = ns0.findObjectsResponse_Dec().pyclass

getObjectHistoryRequest = ns0.getObjectHistory_Dec().pyclass

getObjectHistoryResponse = ns0.getObjectHistoryResponse_Dec().pyclass
